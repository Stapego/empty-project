---
const { platform, username } = Astro.props;

// Соответствие платформ иконкам (можно использовать SVG или emoji)
const icons = {
  github: (
    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor">
      <path d="M12 2C6.477 2 2 6.484 2 12.017c0 4.425 2.865 8.18 6.839 9.504.5.092..."/>
    </svg>
  ),
  twitter: (
    <svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
      <path d="M23.953 4.57a10 10 0 01-2.825.775..."/>
    </svg>
  ),
  default: (
    <svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
      <path d="M12 2a10 10 0 100 20 10 10 0 000-20z"/>
    </svg>
  )
};

type SocialPlatform = 'github' | 'twitter' | 'instagram' | 'linkedin' | 'youtube' | string;

const getPlatformIcon = (platform: SocialPlatform) => icons[platform] || icons.default;

const getPlatformUrl = (platform: SocialPlatform, username: string): string => {
  const urls: Record<SocialPlatform, string> = {
    github: `https://github.com/${username}`,
    twitter: `https://twitter.com/${username}`,
    instagram: `https://instagram.com/${username}`,
    linkedin: `https://linkedin.com/in/${username}`,
    youtube: `https://youtube.com/@${username}`,
  };
  
  return urls[platform] || `https://${platform}.com/${username}`;
};
---

<a 
  href={getPlatformUrl(platform, username)} 
  target="_blank" 
  rel="noopener noreferrer"
  class="social-link"
>
  <span class="icon">{getPlatformIcon(platform)}</span>
  <span class="platform-name">{platform}</span>
</a>

<style>
  .social-link {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem 1rem;
    color: white;
    background-color: #4c1d95;
    text-decoration: none;
    border-radius: 0.375rem;
    transition: background-color 0.2s;
  }

  .social-link:hover {
    background-color: #5b21b6;
  }

  .icon {
    font-size: 1.2rem;
  }

  .platform-name {
    text-transform: capitalize;
  }
</style>